/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import Entidades.TipoContato;
import ImplementsDAO.ContatoDAOImplements;
import ImplementsDAO.TipoContatoDAOImplements;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alunos
 */
public class JPanelTipoContato extends javax.swing.JPanel implements InterfaceGerenciaTabela {

    /**
     * Creates new form NewJPanelDepartamento
     */
    public JPanelTipoContato() throws SQLException, ClassNotFoundException {
        initComponents();
        List<Object> listaTipos = new TipoContatoDAOImplements().pesquisarTodos();
        carregaTabela(listaTipos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelTipoContato = new javax.swing.JLabel();
        jTextFieldTipoContato = new javax.swing.JTextField();
        jButtonIncluirTipoCtt = new javax.swing.JButton();
        jButtonExcluirTipoCtt = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldProxIdTipoContato = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel1.setText("TIPO CONTATO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 15, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabelTipoContato.setText("Nome: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabelTipoContato, gridBagConstraints);

        jTextFieldTipoContato.setColumns(15);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jTextFieldTipoContato, gridBagConstraints);

        jButtonIncluirTipoCtt.setText("+");
        jButtonIncluirTipoCtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirTipoCttActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jButtonIncluirTipoCtt, gridBagConstraints);

        jButtonExcluirTipoCtt.setText("-");
        jButtonExcluirTipoCtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirTipoCttActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jButtonExcluirTipoCtt, gridBagConstraints);

        jButtonVoltar.setText("Voltar");
        jButtonVoltar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jButtonVoltar, gridBagConstraints);

        jLabel2.setText("ID: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextFieldProxIdTipoContato.setEditable(false);
        jTextFieldProxIdTipoContato.setColumns(3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jTextFieldProxIdTipoContato, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 60;
        gridBagConstraints.insets = new java.awt.Insets(11, 242, 5, 222);
        add(jPanel1, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setMaximumSize(new java.awt.Dimension(2147483647, 0));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        Principal.chamaTelaContatos();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    public void geraCampoId() throws SQLException, ClassNotFoundException {
        TipoContatoDAOImplements daoImp = new TipoContatoDAOImplements();
        jTextFieldProxIdTipoContato.setText(String.valueOf(daoImp.retornaProximoId()));
    }

    private void jButtonIncluirTipoCttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirTipoCttActionPerformed
        if (camposPreenchidos()) {
            String nome = jTextFieldTipoContato.getText();
            TipoContato tipo = new TipoContato();
            tipo.setNome(nome);
            TipoContatoDAOImplements tipoContatoImp = new TipoContatoDAOImplements();
            try {
                if (tipoContatoImp.inserir(tipo)) {
                    JOptionPane.showMessageDialog(null, "Tipo Contato Inserido");
                    limpaCampos();
                    carregaTabela(tipoContatoImp.pesquisarTodos());
                }
            } catch (Exception ex) {
                Logger.getLogger(JPanelTipoContato.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButtonIncluirTipoCttActionPerformed


    private void jButtonExcluirTipoCttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirTipoCttActionPerformed
        TipoContatoDAOImplements TipoContatoImp = new TipoContatoDAOImplements();
        TipoContato tipo;
        int linha = jTable1.getSelectedRow();
        if (linha > -1) {
            try {
                tipo = (TipoContato) retornaSelecionadoTabela();
                boolean executou = TipoContatoImp.excluir(tipo.getId());
                if (executou) {
                    JOptionPane.showMessageDialog(null, "Tipo de Contato Deletado");
                    carregaTabela(TipoContatoImp.pesquisarTodos());
                } else {
                    JOptionPane.showMessageDialog(null, "Impossível Deletar \nPossui Dependências");
                     jTable1.clearSelection();
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione para deletar");
        }

    }//GEN-LAST:event_jButtonExcluirTipoCttActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExcluirTipoCtt;
    private javax.swing.JButton jButtonIncluirTipoCtt;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelTipoContato;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldProxIdTipoContato;
    private javax.swing.JTextField jTextFieldTipoContato;
    // End of variables declaration//GEN-END:variables

    @Override
    public void limpaCampos() {
        try{
            geraCampoId();
        }catch(Exception e){
            e.printStackTrace();
        }
        jTextFieldTipoContato.setText("");
    }

    @Override
    public boolean camposPreenchidos() {
        if (jTextFieldTipoContato.getText().length() > 0) {
            return true;
        }
        return false;
    }

    @Override
    public final void carregaTabela(List<Object> lista) {
        limpaCampos();
        List<Object> listaContatos = lista;
        String[] colunas = {"Código", "Nome"};
        String[][] dados = new String[listaContatos.size()][colunas.length];
        for (int i = 0; i < listaContatos.size(); i++) {
            TipoContato tipoContato = (TipoContato) listaContatos.get(i);
            dados[i][0] = String.valueOf(tipoContato.getId());
            dados[i][1] = tipoContato.getNome();

        }
        DefaultTableModel modelo = new DefaultTableModel(dados, colunas);
        jTable1.setModel(modelo);
    }

    @Override
    public Object retornaSelecionadoTabela() {
        try {
            int linha = jTable1.getSelectedRow();
            int id = Integer.parseInt(jTable1.getValueAt(linha, 0).toString());
            if (id > 0) {
                TipoContatoDAOImplements tipoDaoImpl = new TipoContatoDAOImplements();
                return tipoDaoImpl.pesquisar(id);
            } else {
                return null;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

}
